version: '3.5'
services:
  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
  app:
    image: "demo-spring-boot-telemetry:0.0.1-SNAPSHOT"
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - MANAGEMENT_ENDPOINT_ENV_SHOW_VALUES=ALWAYS
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,env,prometheus
      - MANAGEMENT_TRACING_ENABLED=true
      - MANAGEMENT_OLTP_TRACING_ENDPOINT=http://otel:4318/v1/traces
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel:4318/v1/traces
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel:4318/v1/metrics
    depends_on:
      - redis
      - otel
    profiles:
      - observability
    ports:
      - "8080:8080"

  # Generate fake traces...
#  k6-tracing:
#    image: ghcr.io/grafana/xk6-client-tracing:v0.0.2
#    environment:
#      - ENDPOINT=otel:4317
#    restart: always
#    depends_on:
#      - otel

  otel:
    container_name: otel
    image: otel/opentelemetry-collector-contrib
    environment:
      - METRICS_HOST=app
      - METRICS_PORT=8080
      - PROMETHEUS_PORT=9090
      - TEMPO_PORT=4318
      - TEMPO_HOST=tempo
    profiles:
      - observability
    depends_on:
      - tempo
      - loki
      - grafana
    volumes:
      - ./docker/collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
  tempo:
    image: grafana/tempo:2.3.0
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    profiles:
      - observability
    ports:
      - "3200:3200"
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
  loki:
    image: grafana/loki
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    profiles:
      - observability
  prometheus:
    image: prom/prometheus
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    profiles:
      - observability
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    profiles:
      - observability
    ports:
      - "3000:3000"