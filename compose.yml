version: '3.5'
services:
  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
  app:
    image: "demo-spring-boot-telemetry:0.0.1-SNAPSHOT"
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - MANAGEMENT_ENDPOINT_ENV_SHOW_VALUES=ALWAYS
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,env
      - MANAGEMENT_TRACING_ENABLED=true
      - MANAGEMENT_OTLP_METRICS_EXPORT_URL=http://otel:4318/v1/metrics
      - MANAGEMENT_OTLP_METRICS_EXPORT_STEP=10s
      - MANAGEMENT_OTLP_METRICS_EXPORT_ENABLED=true
      - MANAGEMENT_OTLP_TRACING_ENDPOINT=http://otel:4318/v1/traces
    depends_on:
      - redis
      - otel
    profiles:
      - observability
    ports:
      - "8080:8080"

  otel:
    image: otel/opentelemetry-collector-contrib:0.90.0
    extra_hosts: ['host.docker.internal:host-gateway']
    profiles:
      - observability
    depends_on:
      - tempo
      - loki
      - grafana
    command: [ "--config=/etc/otelcol-contrib/config.yaml" ]
    volumes:
      - ./docker/collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension

  tempo:
    image: grafana/tempo:2.3.0
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    profiles:
      - observability
    ports:
      - "3200:3200"
      - "4317" # otlp grpc
  loki:
    image: grafana/loki
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    profiles:
      - observability
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    profiles:
      - observability
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    profiles:
      - observability
    ports:
      - "3000:3000"